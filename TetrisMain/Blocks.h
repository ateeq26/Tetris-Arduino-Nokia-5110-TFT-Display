
const byte cBlock [7][4][4][4] =
{

// I
  {
   {
    { 0, 0, 0, 0},
    { 0, 0, 0, 0},
    { 1, 2, 1, 1},
    { 0, 0, 0, 0}
    },
   {
    {0, 1, 0, 0}, 
    {0, 2, 0, 0},
    {0, 1, 0, 0},
    {0, 1, 0, 0}
    },
   {
    {0, 0, 0, 0},
    {1, 1, 2, 1},
    {0, 0, 0, 0},
    {0, 0, 0, 0}
    },
   {
    {0, 0, 1, 0},
    {0, 0, 1, 0},
    {0, 0, 2, 0},
    {0, 0, 1, 0}
    }
   },
  //J
  {
   {
    { 0, 1, 0, 0},
    { 0, 2, 0, 0},
    { 1, 1, 0, 0},
    { 0, 0, 0, 0}
    },
   {
    { 1, 0, 0, 0},
    { 1, 2, 1, 0},
    { 0, 0, 0, 0},    
    { 0, 0, 0, 0}
   },
   {
    {0, 1, 1, 0},
    {0, 2, 0, 0},
    {0, 1, 0, 0},
    {0, 0, 0, 0}
    },
  
   {
    { 0, 0, 0, 0},
    { 1, 2, 1, 0},
    { 0, 0, 1, 0},
    { 0, 0, 0, 0}
    }
   },
// L
  {
   {
    {0, 1, 0, 0},
    {0, 2, 0, 0},
    {0, 1, 1, 0},
    {0, 0, 0, 0}
    },
   {
    { 0, 0, 0, 0},
    { 1, 2, 1, 0},
    { 1, 0, 0, 0},
    { 0, 0, 0, 0}
    },
   {
    {1, 1, 0, 0},
    {0, 2, 0, 0},
    {0, 1, 0, 0},
    {0, 0, 0, 0}
    },
   {
    { 0, 0, 1, 0},
    { 1, 2, 1, 0},
    { 0, 0, 0, 0},
    { 0, 0, 0, 0}
    }
   },

   // O
  {
   {
    { 0, 0, 0, 0},
    { 0, 2, 1, 0},
    { 0, 1, 1, 0},
    { 0, 0, 0, 0}
    },
   {
    { 0, 0, 0, 0},
    { 0, 2, 1, 0},
    { 0, 1, 1, 0},
    { 0, 0, 0, 0}
    },
   {
    { 0, 0, 0, 0},
    { 0, 2, 1, 0},
    { 0, 1, 1, 0},
    { 0, 0, 0, 0}
    },
   {
    { 0, 0, 0, 0},
    { 0, 2, 1, 0},
    { 0, 1, 1, 0},
    { 0, 0, 0, 0}
    }
   },

   //S
  {
   {
    { 0, 1, 0, 0},
    { 0, 2, 1, 0},
    { 0, 0, 1, 0},
    { 0, 0, 0, 0}
    },
   {
    { 0, 0, 0, 0},
    { 0, 2, 1, 0},
    { 1, 1, 0, 0},
    { 0, 0, 0, 0}
    },
   {
    { 1, 0, 0, 0},
    { 1, 2, 0, 0},
    { 0, 1, 0, 0},
    { 0, 0, 0, 0}
    },
   {
    { 0, 1, 1, 0},
    { 1, 2, 0, 0},
    { 0, 0, 0, 0},    
    { 0, 0, 0, 0}
   }
  },

   // T
  {
   {
    { 0, 1, 0, 0},
    { 0, 2, 1, 0},
    { 0, 1, 0, 0},
    { 0, 0, 0, 0}
    },
   {
    { 0, 0, 0, 0},
    { 1, 2, 1, 0},
    { 0, 1, 0, 0},
    { 0, 0, 0, 0}
    },
   {
    { 0, 1, 0, 0},
    { 1, 2, 0, 0},
    { 0, 1, 0, 0},    
    { 0, 0, 0, 0}
    },
   {
  
    { 0, 1, 0, 0},
    { 1, 2, 1, 0},
    { 0, 0, 0, 0},
    { 0, 0, 0, 0},
    }
   },
   
//Z
  {
   {
    { 0, 0, 1, 0},
    { 0, 2, 1, 0},
    { 0, 1, 0, 0},
    { 0, 0, 0, 0}
    },
   {
    { 0, 0, 0, 0},
    { 1, 2, 0, 0},
    { 0, 1, 1, 0},
    { 0, 0, 0, 0}
    },
   {
    {0, 1, 0, 0},
    {1, 2, 0, 0},
    {1, 0, 0, 0},
    {0, 0, 0, 0}
    },
   {
    { 1, 1, 0, 0},
    { 0, 2, 1, 0},
    { 0, 0, 0, 0},
    { 0, 0, 0, 0}
   }
  }
};

const byte cLimit[7][4][4]=//{left,right,up,down}
{
  {//I
    
    {0,4,2,3},
    {1,2,0,4},
    {0,4,1,2},
    {2,3,0,4}
  },
  {//J
    {0,2,0,3},
    {0,3,0,2},
    {1,3,0,3},
    {0,3,1,3}
  },
  {//L
   {1,3,0,3},
   {0,3,1,3},
   {0,2,0,3},
   {0,3,0,2},
  },
  {//O
    {1,3,1,3},
    {1,3,1,3},
    {1,3,1,3},
    {1,3,1,3}
  },
  {//S
    {1,3,0,3},
    {0,3,1,3},
    {0,2,0,3},
    {0,3,0,2}
  },
  {//T    
    {1,3,0,3},
    {0,3,1,3},
    {0,2,0,3},
    {0,3,0,2}
  },
  {//Z
    {1,3,0,3},
    {0,3,1,3},
    {0,2,0,3},
    {0,3,0,2}
    
  }
};
const byte cRight[7][4]=
{
  {3,0,3,0},//I
  {1,2,1,2},//J
  {1,2,1,2},//L
  {1,1,1,1},//O
  {1,2,1,2},//S
  {1,2,1,2},//T
  {1,2,1,2}//Z  
};
 
 
class Blocks
{
  public:       
byte getBlock (byte type, byte rot, byte px, byte py)
{
  return cBlock [type][rot][px][py];
}
byte getLimit(byte type,byte rot,byte pos)
{
  return cLimit[type][rot][pos];
}
byte getRight(byte type,byte rot)
{
  return cRight[type][rot];
}
};

